
%%%%% 20130417 (Kota)

Please review only the first part. 

(done) The first part will be added with if-else section, but other parts are finished. 

(done) Add more on String treatments. 

The second part (nucleus segmentation and intensity measurements) will be largely edited for diminishing overlaps with the module.

(done) Seb: Could you please add details on arrays, we will use them in module 3.

Kota: ... so in the end, there are only two ours so the actual teaching in the course will be a crash course style, more interactive than the detailed and slow progress written in the manual. 

%%%%%  20130419 (Kota)

Modifications To adjust the second part to Module 3....


Following macro functions used in Module 3 (FISH spot classification) should be included:


setThreshold

getResults
roiManager("Count")
rename (will be missing)
imageCalculator (will be missing)
setPixel (will be missing)
round  (will be missing)
getRawStatistics

newArray
Array.print
Array.sort

... maybe start directly with binary image to learn these functions. 
>> use some nucleus image well separated, that could be simply be binarized by default threshold. 

... so modify the second part to something like:

Task: measure the peripheral intensity and prints out min, max, mean intensity.
do this for two frames, beginning and end, compare the values.  (sounds bit too trivial but explain that this is learning)

- split channels
- with DAPI channel
- enhance contrast to see the nucleus
- Gauss Blur (1)
- auto local threshold (window 100), "mean" probably the best, so we decide to go with the "mean" algorithm
- auto local threshold, convert to mask. 
- Analyze Particles (50<) clear results, exclude on edge, include holes, add to manager. (Don't show results, it's also actually possible to do stats from Results table)
>> save the script here. 
- activate NPC channel
- make three new arrays (mean, min, max, std)
Loop
- select a ROI
- getRawStatistics(nPixels, mean, min, max, std, histogram);
- store values into array
Loopends
(manually do one, record the process, put this into the loop)

Array stats, +
rank the mean intensity Array, find the one with highest intensity.  


(maybe setResults)